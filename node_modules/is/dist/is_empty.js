/* IMPORT */
import isArguments from './is_arguments.js';
import isArray from './is_array.js';
import isArrayLike from './is_array_like.js';
import isBuffer from './is_buffer.js';
import isFunction from './is_function.js';
import isMap from './is_map.js';
import isObject from './is_object.js';
import isPrototype from './is_prototype.js';
import isSet from './is_set.js';
import isString from './is_string.js';
import isTypedArray from './is_typed_array.js';
/* HELPERS */
const { hasOwnProperty } = Object;
/* MAIN */
const isEmpty = (value) => {
    if (isArrayLike(value) && (isArray(value) || isString(value) || isFunction(value['splice']) || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
    }
    if (isMap(value) || isSet(value)) {
        return !value.size;
    }
    if (isObject(value)) {
        const isProto = isPrototype(value);
        for (const key in value) {
            if (hasOwnProperty.call(value, key) && (!isProto || key !== 'constructor')) {
                return false;
            }
        }
    }
    return true;
};
/* EXPORT */
export default isEmpty;
